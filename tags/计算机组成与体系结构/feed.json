{"version":"https://jsonfeed.org/version/1.1","title":"计算机组成与体系结构 - 标签 | 菠菜眾長","description":"Hugo FixIt 作者，喜欢瞎折腾、造轮子、写东西，分享一些前端开发中的所见、所闻、所思。","home_page_url":"https://lruihao.cn/","language":"zh-CN","icon":"https://lruihao.cn/apple-touch-icon.png","favicon":"https://lruihao.cn/favicon.ico","authors":[{"name":"Lruihao","url":"https://github.com/Lruihao","avatar":"https://lruihao.cn/images/avatar.jpg"}],"items":[{"title":"流水线","date_published":"2018-10-09T16:21:04&#43;08:00","date_modified":"2018-10-09T16:21:04&#43;08:00","id":"https://lruihao.cn/posts/liushuixian/","url":"https://lruihao.cn/posts/liushuixian/","authors":[{"name":"Lruihao","url":"https://github.com/Lruihao","avatar":"https://gravatar.loli.net/avatar/fee47a2f4f2cc71f99a02b0a73ecfee0?s=32&amp;d=mp"}],"tags":["流水线","计算机组成与体系结构"],"summary":"1 概念 流水线是指在程序执行时多条指令重叠进行操作的一种准并行处理实现技术。各种部件同时处理是针对不同指令而言的，它们可同时为多条指令的不同部分进行工作，以提高各部件的利用率和指令的平均执行速度。\n","content_html":"\u003ch2 id=\"概念\" class=\"heading-element\"\u003e\u003cspan\u003e1 概念\u003c/span\u003e\n  \u003ca href=\"#%e6%a6%82%e5%bf%b5\" class=\"heading-mark\"\u003e\n    \u003csvg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"\u003e\u003cpath d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"\u003e\u003c/path\u003e\u003c/svg\u003e\n  \u003c/a\u003e\n\u003c/h2\u003e\u003cp\u003e流水线是指在程序执行时多条指令重叠进行操作的一种准并行处理实现技术。各种部件同时处理是针对不同指令而言的，它们可同时为多条指令的不同部分进行工作，以提高各部件的利用率和指令的平均执行速度。\u003c/p\u003e"},{"title":"计算机数据","date_published":"2018-10-08T23:01:10&#43;08:00","date_modified":"2023-12-08T20:26:13&#43;08:00","id":"https://lruihao.cn/posts/data/","url":"https://lruihao.cn/posts/data/","authors":[{"name":"Lruihao","url":"https://github.com/Lruihao","avatar":"https://gravatar.loli.net/avatar/fee47a2f4f2cc71f99a02b0a73ecfee0?s=32&amp;d=mp"}],"tags":["计算机数据","计算机组成与体系结构"],"summary":"0.1 数据的表示 数据的表示可分为：原码，反码和补码。（二进制）\n原码：符号位 0 为正，1 为负。 反码：符号位 0 为正，1 为负。 正数：反码同原码。 负数：符号位除外其他位按位取反。 补码： 正数：同原码。 负数：符号位除外其他位按位取反再 +1。 移码：补码符号位取反。 0.2 数据表示范围 原码： -(z^n-1 - 1) ~ 2^n-1 - 1 反码： -(z^n-1 - 1) ~ 2^n-1 - 1 补码： -z^n-1 ~ 2^n-1 - 1 （补码正 0 和负 0 相同，少占一数位，就多一个范围） 例： 8 位二进制，除去符号位还有 7 位，7 个 1 为最大数，相当于 8 个 1 减 1，也就是 2^7-1, 所以范围就算出来了。\n","content_html":"\u003ch3 id=\"数据的表示\" class=\"heading-element\"\u003e\u003cspan\u003e0.1 数据的表示\u003c/span\u003e\n  \u003ca href=\"#%e6%95%b0%e6%8d%ae%e7%9a%84%e8%a1%a8%e7%a4%ba\" class=\"heading-mark\"\u003e\n    \u003csvg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"\u003e\u003cpath d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"\u003e\u003c/path\u003e\u003c/svg\u003e\n  \u003c/a\u003e\n\u003c/h3\u003e\u003cp\u003e\u003cstrong\u003e数据的表示可分为：原码，反码和补码。（二进制）\u003c/strong\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e原码：符号位 0 为正，1 为负。\u003c/li\u003e\n\u003cli\u003e反码：符号位 0 为正，1 为负。\n\u003cul\u003e\n\u003cli\u003e正数：反码同原码。\u003c/li\u003e\n\u003cli\u003e负数：符号位除外其他位按位取反。\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e补码：\n\u003cul\u003e\n\u003cli\u003e正数：同原码。\u003c/li\u003e\n\u003cli\u003e负数：符号位除外其他位按位取反再 +1。\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e移码：补码符号位取反。\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"数据表示范围\" class=\"heading-element\"\u003e\u003cspan\u003e0.2 数据表示范围\u003c/span\u003e\n  \u003ca href=\"#%e6%95%b0%e6%8d%ae%e8%a1%a8%e7%a4%ba%e8%8c%83%e5%9b%b4\" class=\"heading-mark\"\u003e\n    \u003csvg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"\u003e\u003cpath d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"\u003e\u003c/path\u003e\u003c/svg\u003e\n  \u003c/a\u003e\n\u003c/h3\u003e\u003cul\u003e\n\u003cli\u003e原码： \u003ccode\u003e-(z^n-1 - 1) ~ 2^n-1 - 1\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e反码： \u003ccode\u003e-(z^n-1 - 1) ~ 2^n-1 - 1\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e补码： \u003ccode\u003e-z^n-1 ~ 2^n-1 - 1\u003c/code\u003e （补码正 0 和负 0 相同，少占一数位，就多一个范围）\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e例：\n8 位二进制，除去符号位还有 7 位，7 个 1 为最大数，相当于 8 个 1 减 1，也就是 2^7-1, 所以范围就算出来了。\u003c/p\u003e"}]}